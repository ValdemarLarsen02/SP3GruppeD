@startuml
!pragma layout smetana

class Main {
    + main(args: String[]): void
}



class FileIO {
    - mediaDataPath: String
    - path: String
    - ui: Util
    + readFile(path: String): List
    + parseLine(line: String, path: String): Media
    + getCategories(data: String): ArrayList<Category>
    + saveMediaData(title: String, releaseYear: int, category: ArrayList<Category>, rating: double): void
    + saveUserData(username: String, password: String, path: String): void
}
class Util {
    + scanner: Scanner
    + displayList(list: ArrayList<String>, msg: String): void
    + promptText(msg: String): String
    + promptNumeric(msg: String): int
    + displayMsg(msg: String): String
    + promptChoice(optionslist: ArrayList<String>, msg: String): int
}
class Menu {
    - listOfActions: ArrayList<String>
    - listOfActions2: ArrayList<String>
    - optionslist: ArrayList<String>
    - util: Util
    - user: User
    - streaming: Streaming
    - media: Media
    - sh: SearchHandler
    - username: String
    - password: String
    - category: Category
    + ShowMenu(): void
    + startMenu(): void
    + exit(): void
    + usernameInfoScreen(msg: String): String
    + passwordInfoScreen(msg: String): String
    + settings(): void
    + mainMenu(): ArrayList
}
abstract class Media {
    - util: Util
    - fileIO: FileIO
    - releaseYear: int
    - title: String
    - categories: ArrayList<Category>
    - rating: double
    + watchLater(user: User): void
    + removeFromWatchLater(user: User): void
    + alreadyWatched(user: User): void
    + watch(title: String): void
    + loadMedia(pathToFile: String): List
    + displayMediaList(mediaList: List
    , startIndex: int, count: int): void
    + getReleaseYear(): int
    + getTitle(): String
    + getCategory(): ArrayList<Category>
    + getRating(): double
}
class Movies {
    + toString(): String
}
class Shows {
    - seasons: List
    + addSeason(seasonNumber: int, episodeCount: int): void
    + toString(): String
}
enum Category {
}
class User {
    - fileIO: FileIO
    - util: Util
    - username: String
    - password: String
    + login(username: String, password: String, path: String): boolean
}
class Streaming {
    - listOfActions: ArrayList<String>
    - io: FileIO
    - util: Util
    - menu: Menu
    - username: String
    - password: String
    + createAccount(username: String, password: String, path: String): void
}
class Seasons {
    - seasonNumber: int
    - episodeCount: int
    + getSeasonNumber(): int
    + getEpisodeCount(): int
}

FileIO -- Util
Menu -- Util
Menu -- User
Menu -- Streaming
Menu -- Media
Menu -- SearchHandler
Media <|-- Movies
Media <|-- Shows
Media <|-- SearchHandler
Shows "1" *-- "1..*" Seasons
Main -- Menu
Main -- FileIO
Main -- Util
Main -- User
Main -- Streaming


@enduml
